{
  "version": 3,
  "sources": ["../../../vendor/exemption-iq/dist/components/ExemptionIqClient.js", "../../../vendor/exemption-iq/dist/components/AvataxCertificateClient.js", "../../../vendor/exemption-iq/dist/components/ui/Modal.js", "../../../vendor/exemption-iq/dist/components/ui/PDFModal.js", "../../../vendor/exemption-iq/dist/server/helpers/getApiUrl.js", "../../../vendor/exemption-iq/dist/components/ExemptionIqCustomerClient.js", "../../../vendor/exemption-iq/dist/components/ExemptionIqCertificateTable.js", "../../../vendor/exemption-iq/dist/components/ExemptionIqGencertModal.js", "../../../vendor/exemption-iq/dist/components/ExemptionIqAddCertificateButton.js", "../../../vendor/exemption-iq/dist/components/ExemptionIqButton.js", "../../../vendor/exemption-iq/dist/components/ExemptionIqServer.js", "../../../vendor/exemption-iq/dist/components/ExemptionIqCustomerServer.js", "../../../app/components/ClientOnly.tsx"],
  "sourcesContent": ["\"use client\";\nimport { useEffect, useState } from \"react\";\nimport AvataxCertificateClient from \"./AvataxCertificateClient\";\nimport React from \"react\";\nimport Modal from \"./ui/Modal\";\nimport PDFModal from \"./ui/PDFModal\";\nimport { getApiUrl } from \"../server/helpers/getApiUrl\";\nconst styles = {\n  button: {\n    padding: \"0.75rem 1.5rem\",\n    borderRadius: \"6px\",\n    fontWeight: 500,\n    transition: \"all 150ms ease-in-out\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"none\"\n  },\n  spinner: {\n    animation: \"eiq-spin 1s linear infinite\",\n    marginRight: \"0.75rem\",\n    height: \"1.25rem\",\n    width: \"1.25rem\"\n  },\n  certModal: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"1rem\"\n  },\n  certInfoBox: {\n    backgroundColor: \"#f9fafb\",\n    padding: \"1rem\",\n    borderRadius: \"0.5rem\",\n    border: \"1px solid #d1d5db\"\n  },\n  actions: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    gap: \"1rem\",\n    paddingTop: \"1rem\"\n  },\n  viewPdfBtn: {\n    color: \"#2563eb\",\n    textDecoration: \"underline\",\n    background: \"none\",\n    border: \"none\",\n    padding: 0,\n    font: \"inherit\",\n    cursor: \"pointer\"\n  },\n  useCertBtn: {\n    backgroundColor: \"#e5e7eb\",\n    fontSize: \"0.875rem\",\n    padding: \"0.5rem 1rem\",\n    borderRadius: \"4px\",\n    border: \"none\",\n    cursor: \"pointer\"\n  },\n  uploadCertBtn: {\n    color: \"white\",\n    fontSize: \"0.875rem\",\n    padding: \"0.5rem 1rem\",\n    borderRadius: \"4px\",\n    border: \"none\",\n    cursor: \"pointer\"\n  },\n  error: {\n    marginTop: \"1rem\",\n    color: \"#E76F51\"\n  },\n  success: {\n    width: \"100%\"\n  },\n  successBtn: {\n    backgroundColor: \"#14AE5C\",\n    color: \"white\",\n    padding: \"0.5rem 1rem\",\n    borderRadius: \"4px\",\n    opacity: 0.75,\n    cursor: \"not-allowed\",\n    border: \"none\"\n  },\n  keyframes: `\n    @keyframes eiq-spin {\n      to {\n        transform: rotate(360deg);\n      }\n    }\n  `\n};\nfunction ExemptionIqClient({\n  customerCode,\n  customerInfo,\n  state,\n  showDownload = false,\n  manualValidation = true,\n  buttonText = \"Tax Exempt\",\n  buttonTextColor,\n  primaryColor = \"#2966B1\",\n  dangerColor = \"#E76F51\",\n  successColor = \"#14AE5C\",\n  buttonStyles,\n  onComplete,\n  framework = \"next\"\n}) {\n  const [token, setToken] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showCertForm, setShowCertForm] = useState(false);\n  const [certificateId, setCertificateId] = useState(null);\n  const [showSuccessState, setShowSuccessState] = useState(false);\n  const [matchingCertificate, setMatchingCertificate] = useState(null);\n  const [showCertChoiceModal, setShowCertChoiceModal] = useState(false);\n  const [previewUrl, setPreviewUrl] = useState(null);\n  useEffect(() => {\n    if (typeof window !== \"undefined\" && !document.getElementById(\"eiq-keyframes\")) {\n      const style = document.createElement(\"style\");\n      style.id = \"eiq-keyframes\";\n      style.innerHTML = styles.keyframes;\n      document.head.appendChild(style);\n    }\n    const setSessionCookie = async () => {\n      try {\n        const res = await fetch(getApiUrl(framework, \"session\"), {\n          credentials: \"include\"\n        });\n        if (!res.ok) throw new Error(\"Failed to fetch session\");\n        const data = await res.json();\n        document.cookie = `eiq_session_token=${data.token}; path=/; max-age=3600; SameSite=Lax`;\n      } catch (err) {\n        console.error(\"\\u274C Failed to set session cookie\", err);\n      }\n    };\n    setSessionCookie();\n  }, []);\n  const getButtonColor = () => {\n    if (!customerCode) return dangerColor;\n    if (error) return dangerColor;\n    if (showSuccessState) return successColor;\n    return primaryColor;\n  };\n  const getButtonText = () => {\n    if (!customerCode) return \"No Customer Code\";\n    if (isLoading) return \"Processing...\";\n    if (showSuccessState) return \"Exempt \\u2713\";\n    return buttonText;\n  };\n  const handleCertificateGeneration = async () => {\n    if (!customerCode || isLoading) return;\n    setIsLoading(true);\n    setError(null);\n    try {\n      const validateRes = await fetch(getApiUrl(framework, \"validate\"), {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ customerCode, state })\n      });\n      const validationData = await validateRes.json();\n      if (validationData.status === \"valid\" && validationData.certificates.length > 0) {\n        setMatchingCertificate(validationData.certificates[0]);\n        setShowCertChoiceModal(true);\n        return;\n      }\n      const tokenResponse = await fetch(getApiUrl(framework, \"gencert/token\"), {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ customerCode, ...customerInfo })\n      });\n      if (!tokenResponse.ok) {\n        throw new Error(\"Failed to generate certificate token\");\n      }\n      const { token: token2 } = await tokenResponse.json();\n      setToken(token2);\n      setShowCertForm(true);\n    } catch (err) {\n      console.error(\"Certificate generation error:\", err);\n      setError(err.message || \"Failed to generate certificate\");\n      setToken(null);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleCertificateComplete = async (certId) => {\n    setCertificateId(certId);\n    setShowSuccessState(true);\n    setIsLoading(false);\n    setShowCertForm(false);\n  };\n  const handleClose = () => {\n    setShowCertForm(false);\n    if (certificateId) {\n      setShowSuccessState(true);\n    }\n  };\n  return /* @__PURE__ */ React.createElement(\"div\", null, !showCertForm && !showSuccessState && /* @__PURE__ */ React.createElement(\n    \"button\",\n    {\n      onClick: handleCertificateGeneration,\n      disabled: !customerCode || isLoading,\n      style: {\n        ...styles.button,\n        backgroundColor: getButtonColor(),\n        color: buttonTextColor || \"#FFFFFF\",\n        cursor: !customerCode || isLoading ? \"not-allowed\" : \"pointer\",\n        opacity: !customerCode || isLoading ? 0.7 : 1,\n        ...buttonStyles ? JSON.parse(buttonStyles) : {}\n      }\n    },\n    /* @__PURE__ */ React.createElement(\"span\", { style: { display: \"inline-flex\", alignItems: \"center\" } }, isLoading && /* @__PURE__ */ React.createElement(\n      \"svg\",\n      {\n        style: styles.spinner,\n        xmlns: \"http://www.w3.org/2000/svg\",\n        fill: \"none\",\n        viewBox: \"0 0 24 24\"\n      },\n      /* @__PURE__ */ React.createElement(\n        \"circle\",\n        {\n          cx: \"12\",\n          cy: \"12\",\n          r: \"10\",\n          stroke: \"currentColor\",\n          strokeWidth: \"4\"\n        }\n      ),\n      /* @__PURE__ */ React.createElement(\n        \"path\",\n        {\n          fill: \"currentColor\",\n          d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n        }\n      )\n    ), getButtonText())\n  ), showCertChoiceModal && matchingCertificate && /* @__PURE__ */ React.createElement(Modal, { isOpen: true, onClose: () => setShowCertChoiceModal(false) }, /* @__PURE__ */ React.createElement(\"div\", { style: styles.certModal }, /* @__PURE__ */ React.createElement(\"h2\", { style: { fontSize: \"1.125rem\", fontWeight: 600 } }, \"A valid certificate already exists for \", state), /* @__PURE__ */ React.createElement(\"p\", { style: { fontSize: \"0.875rem\", color: \"#4B5563\" } }, \"You can use this certificate or upload a new one.\"), /* @__PURE__ */ React.createElement(\"div\", { style: styles.certInfoBox }, /* @__PURE__ */ React.createElement(\"p\", null, /* @__PURE__ */ React.createElement(\"strong\", null, \"Reason:\"), \" \", matchingCertificate.actualTaxCode.name), /* @__PURE__ */ React.createElement(\"p\", null, /* @__PURE__ */ React.createElement(\"strong\", null, \"Signed:\"), \" \", new Date(\n    matchingCertificate.certificate.signedDate\n  ).toLocaleDateString()), /* @__PURE__ */ React.createElement(\"p\", null, /* @__PURE__ */ React.createElement(\"strong\", null, \"Expires:\"), \" \", matchingCertificate.certificate.expirationDate ? new Date(\n    matchingCertificate.certificate.expirationDate\n  ).toLocaleDateString() : \"N/A\"), /* @__PURE__ */ React.createElement(\n    \"button\",\n    {\n      onClick: () => setPreviewUrl(\n        getApiUrl(\n          framework,\n          `certificate/${matchingCertificate.id}`\n        )\n      ),\n      style: styles.viewPdfBtn\n    },\n    \"View PDF\"\n  )), /* @__PURE__ */ React.createElement(\"div\", { style: styles.actions }, /* @__PURE__ */ React.createElement(\n    \"button\",\n    {\n      style: styles.useCertBtn,\n      onClick: () => {\n        setShowCertChoiceModal(false);\n        setShowSuccessState(true);\n        onComplete == null ? void 0 : onComplete(true);\n      }\n    },\n    \"Use This Certificate\"\n  ), /* @__PURE__ */ React.createElement(\n    \"button\",\n    {\n      style: {\n        ...styles.uploadCertBtn,\n        backgroundColor: primaryColor\n      },\n      onClick: async () => {\n        setShowCertChoiceModal(false);\n        const res = await fetch(\n          getApiUrl(framework, \"gencert/token\"),\n          {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ customerCode, ...customerInfo })\n          }\n        );\n        const { token: token2 } = await res.json();\n        setToken(token2);\n        setShowCertForm(true);\n      }\n    },\n    \"Upload New Certificate\"\n  )))), previewUrl && /* @__PURE__ */ React.createElement(\n    PDFModal,\n    {\n      isOpen: !!previewUrl,\n      onClose: () => setPreviewUrl(null),\n      pdfUrl: previewUrl,\n      title: \"Certificate PDF Preview\"\n    }\n  ), showCertForm && token && /* @__PURE__ */ React.createElement(Modal, { isOpen: true, onClose: handleClose }, /* @__PURE__ */ React.createElement(\n    AvataxCertificateClient,\n    {\n      token,\n      state,\n      showDownload,\n      manualValidation,\n      onCertificateComplete: handleCertificateComplete,\n      onClose: handleClose,\n      customerInfo,\n      customerCode,\n      mode: \"renew\",\n      onComplete\n    }\n  )), showSuccessState && /* @__PURE__ */ React.createElement(\"div\", { style: styles.success }, /* @__PURE__ */ React.createElement(\n    \"button\",\n    {\n      disabled: true,\n      style: {\n        ...styles.successBtn,\n        ...buttonStyles ? JSON.parse(buttonStyles) : {}\n      }\n    },\n    \"Exempt \\u2713\"\n  )), error && /* @__PURE__ */ React.createElement(\"div\", { style: styles.error }, /* @__PURE__ */ React.createElement(\"p\", null, error)));\n}\nexport {\n  ExemptionIqClient\n};\n", "\"use client\";\nimport { useEffect, useState, useRef } from \"react\";\nimport React from \"react\";\nconst styles = {\n  container: {\n    width: \"100%\",\n    height: \"35rem\",\n    position: \"relative\",\n    overflowY: \"auto\"\n  },\n  loadingOverlay: {\n    position: \"absolute\",\n    inset: 0,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"rgba(255, 255, 255, 0.9)\",\n    zIndex: 10\n  },\n  spinner: {\n    height: \"3rem\",\n    width: \"3rem\",\n    borderRadius: \"9999px\",\n    borderBottom: \"2px solid #3b82f6\",\n    animation: \"eiq-spin 1s linear infinite\"\n  },\n  loadingText: {\n    marginTop: \"1rem\",\n    color: \"#4b5563\",\n    textAlign: \"center\"\n  },\n  formContainer: {\n    width: \"100%\",\n    height: \"100%\"\n  },\n  closeBtnContainer: {\n    position: \"absolute\",\n    top: \"0.5rem\",\n    right: \"0.5rem\",\n    display: \"flex\",\n    gap: \"0.5rem\",\n    zIndex: 50\n  },\n  closeBtn: {\n    padding: \"0.5rem 1rem\",\n    backgroundColor: \"white\",\n    color: \"#1f2937\",\n    border: \"1px solid #e5e7eb\",\n    borderRadius: \"0.375rem\",\n    boxShadow: \"0 1px 2px rgba(0, 0, 0, 0.05)\",\n    cursor: \"pointer\",\n    transition: \"background-color 0.2s ease-in-out\"\n  },\n  closeBtnHover: {\n    backgroundColor: \"#f3f4f6\"\n  },\n  errorBox: {\n    backgroundColor: \"#fef2f2\",\n    border: \"1px solid #fecaca\",\n    borderRadius: \"0.5rem\",\n    padding: \"1rem\",\n    color: \"#b91c1c\",\n    fontWeight: 500\n  },\n  keyframes: `\n    @keyframes eiq-spin {\n      to {\n        transform: rotate(360deg);\n      }\n    }\n  `\n};\nfunction AvataxCertificateClient({\n  token,\n  state,\n  showDownload = false,\n  manualValidation = true,\n  onCertificateComplete,\n  onClose,\n  customerInfo,\n  shouldPrefillState = true,\n  mode,\n  onComplete,\n  customerCode\n}) {\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [showCloseButton, setShowCloseButton] = useState(false);\n  const formContainerRef = useRef(null);\n  const handleClose = () => {\n    if (window.GenCert) {\n      window.GenCert.hide();\n      onClose();\n    }\n  };\n  useEffect(() => {\n    if (typeof window !== \"undefined\" && !document.getElementById(\"eiq-spin-style\")) {\n      const style = document.createElement(\"style\");\n      style.id = \"eiq-spin-style\";\n      style.textContent = styles.keyframes;\n      document.head.appendChild(style);\n    }\n    if (isInitialized) return;\n    const initializeCertCapture = () => {\n      const script2 = document.createElement(\"script\");\n      script2.src = \"https://sbx.certcapture.com/gencert2/js\";\n      script2.crossOrigin = \"anonymous\";\n      script2.onload = () => {\n        if (formContainerRef.current && window.GenCert) {\n          try {\n            window.GenCert.init(formContainerRef.current, {\n              token,\n              customer_number: customerCode,\n              ship_zone: mode === \"renew\" && shouldPrefillState ? state : \"\",\n              preview: showDownload,\n              show_files: showDownload,\n              submit_to_stack: manualValidation,\n              onCertSuccess: () => {\n                var _a;\n                setShowCloseButton(true);\n                if ((_a = window.GenCert.certificateIds) == null ? void 0 : _a.length) {\n                  const certId = window.GenCert.certificateIds[0];\n                  onCertificateComplete(certId);\n                  onComplete == null ? void 0 : onComplete(true);\n                } else {\n                  onComplete == null ? void 0 : onComplete(false);\n                }\n              }\n            });\n            if (customerInfo && mode === \"renew\") {\n              window.GenCert.setCustomerData({\n                name: customerInfo.name,\n                address1: customerInfo.addressLine1,\n                address2: customerInfo.addressLine2,\n                city: customerInfo.city,\n                zip: customerInfo.postalCode,\n                phone: customerInfo.phoneNumber,\n                fax: customerInfo.faxNumber,\n                email: customerInfo.emailAddress,\n                state\n              });\n            }\n            window.GenCert.setShipZone(state);\n            window.GenCert.show();\n            setIsLoading(false);\n            setIsInitialized(true);\n          } catch (err) {\n            console.error(\"Error initializing certificate form:\", err);\n            setError(\n              \"Failed to initialize the tax exemption certificate form.\"\n            );\n            setIsLoading(false);\n            onComplete == null ? void 0 : onComplete(false);\n          }\n        } else {\n          setError(\"The tax exemption certificate form could not be loaded.\");\n          setIsLoading(false);\n          onComplete == null ? void 0 : onComplete(false);\n        }\n      };\n      script2.onerror = () => {\n        console.error(\"Failed to load certificate widget script.\");\n        setError(\"Failed to load the tax exemption certificate system.\");\n        setIsLoading(false);\n        onComplete == null ? void 0 : onComplete(false);\n      };\n      document.body.appendChild(script2);\n      return script2;\n    };\n    const script = initializeCertCapture();\n    return () => {\n      if (script && document.body.contains(script)) {\n        document.body.removeChild(script);\n      }\n      document.querySelectorAll(\"style\").forEach((style) => {\n        var _a;\n        if ((_a = style.textContent) == null ? void 0 : _a.includes(\"form_container iframe\")) {\n          style.remove();\n        }\n      });\n    };\n  }, [\n    token,\n    state,\n    showDownload,\n    isInitialized,\n    onCertificateComplete,\n    customerInfo\n  ]);\n  if (error) {\n    return /* @__PURE__ */ React.createElement(\"div\", { style: styles.container }, /* @__PURE__ */ React.createElement(\"div\", { style: styles.errorBox }, /* @__PURE__ */ React.createElement(\"p\", null, \"Error: \", error)));\n  }\n  return /* @__PURE__ */ React.createElement(\"div\", { style: styles.container }, isLoading && /* @__PURE__ */ React.createElement(\"div\", { style: styles.loadingOverlay }, /* @__PURE__ */ React.createElement(\n    \"div\",\n    {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      }\n    },\n    /* @__PURE__ */ React.createElement(\"div\", { style: styles.spinner }),\n    /* @__PURE__ */ React.createElement(\"p\", { style: styles.loadingText }, \"Loading tax exemption certificate form...\")\n  )), /* @__PURE__ */ React.createElement(\n    \"div\",\n    {\n      ref: formContainerRef,\n      id: \"form_container\",\n      style: styles.formContainer,\n      \"aria-label\": \"Tax Exemption Certificate Form\",\n      role: \"dialog\"\n    }\n  ), showCloseButton && /* @__PURE__ */ React.createElement(\"div\", { style: styles.closeBtnContainer }, /* @__PURE__ */ React.createElement(\"button\", { onClick: handleClose, style: styles.closeBtn }, \"Close Certificate\")));\n}\nexport {\n  AvataxCertificateClient as default\n};\n", "\"use client\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nconst styles = {\n  overlay: {\n    position: \"fixed\",\n    inset: 0,\n    zIndex: 50,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"rgba(0, 0, 0, 0.25)\",\n    backdropFilter: \"blur(4px)\"\n  },\n  content: {\n    position: \"relative\",\n    width: \"100%\",\n    maxWidth: \"48rem\",\n    margin: \"0 auto\",\n    borderRadius: \"0.5rem\",\n    backgroundColor: \"#ffffff\",\n    boxShadow: \"0 10px 15px rgba(0, 0, 0, 0.1)\",\n    padding: \"1.5rem\",\n    maxHeight: \"90vh\",\n    overflow: \"auto\"\n  },\n  closeButton: {\n    position: \"absolute\",\n    top: \"0.75rem\",\n    right: \"0.75rem\",\n    color: \"#6b7280\",\n    background: \"none\",\n    border: \"none\",\n    cursor: \"pointer\",\n    fontSize: \"1rem\",\n    zIndex: 10\n  },\n  closeIcon: {\n    width: \"1.5rem\",\n    height: \"1.5rem\",\n    textAlign: \"center\",\n    lineHeight: \"1.5rem\"\n  }\n};\nfunction Modal({ isOpen, onClose, children }) {\n  const overlayRef = useRef(null);\n  const [mounted, setMounted] = useState(false);\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n  if (!isOpen || !mounted) return null;\n  const handleOverlayClick = (e) => {\n    if (e.target === overlayRef.current) {\n      onClose();\n    }\n  };\n  const modalContent = /* @__PURE__ */ React.createElement(\"div\", { ref: overlayRef, onClick: handleOverlayClick, style: styles.overlay }, /* @__PURE__ */ React.createElement(\"div\", { style: styles.content }, /* @__PURE__ */ React.createElement(\"button\", { onClick: onClose, style: styles.closeButton }, /* @__PURE__ */ React.createElement(\"p\", { style: styles.closeIcon }, \"X\")), children));\n  return createPortal(modalContent, document.body);\n}\nexport {\n  Modal as default\n};\n", "import React from \"react\";\nimport Modal from \"./Modal\";\nconst styles = {\n  heading: {\n    fontSize: \"1.125rem\",\n    fontWeight: 600,\n    marginBottom: \"1rem\"\n  },\n  downloadLink: {\n    color: \"#2563eb\",\n    textDecoration: \"underline\",\n    display: \"block\",\n    marginTop: \"0.5rem\",\n    transition: \"color 0.2s ease-in-out\"\n  },\n  downloadLinkHover: {\n    color: \"#1d4ed8\"\n  },\n  iframe: {\n    width: \"100%\",\n    height: \"80vh\",\n    border: \"1px solid #d1d5db\",\n    borderRadius: \"0.375rem\"\n  }\n};\nfunction PDFModal({\n  isOpen,\n  onClose,\n  pdfUrl,\n  title\n}) {\n  return /* @__PURE__ */ React.createElement(Modal, { isOpen, onClose }, /* @__PURE__ */ React.createElement(\"h2\", { style: styles.heading }, title || \"Certificate Preview\"), /* @__PURE__ */ React.createElement(\n    \"a\",\n    {\n      href: pdfUrl,\n      download: true,\n      style: styles.downloadLink,\n      onMouseOver: (e) => e.currentTarget.style.color = styles.downloadLinkHover.color,\n      onMouseOut: (e) => e.currentTarget.style.color = styles.downloadLink.color\n    },\n    \"Download PDF\"\n  ), /* @__PURE__ */ React.createElement(\"div\", null, /* @__PURE__ */ React.createElement(\"iframe\", { src: pdfUrl, title: \"Certificate PDF\", style: styles.iframe })));\n}\nexport {\n  PDFModal as default\n};\n", "function getApiUrl(framework, route) {\n  const parts = route.split(\"/\").filter(Boolean);\n  switch (framework) {\n    case \"remix\":\n      return `/exemption-iq/${parts.join(\"/\")}`;\n    case \"next\":\n    case \"astro\":\n    case \"express\":\n    case \"generic\":\n    default:\n      return `/api/exemption-iq/${parts.join(\"/\")}`;\n  }\n}\nexport {\n  getApiUrl\n};\n", "\"use client\";\nimport React, { useEffect, useState } from \"react\";\nimport ExemptionIqCertificateTable from \"./ExemptionIqCertificateTable\";\nimport { getApiUrl } from \"../server/helpers/getApiUrl\";\nfunction ExemptionIqCustomerClient({\n  customerCode,\n  customerInfo,\n  state,\n  showDownload = false,\n  manualValidation = true,\n  enableGenCertModal = false,\n  buttonText = \"Add New Certificate\",\n  buttonTextColor,\n  primaryColor = \"#2966B1\",\n  dangerColor = \"#E76F51\",\n  successColor = \"#14AE5C\",\n  buttonStyles,\n  onComplete,\n  framework = \"next\"\n}) {\n  const [token, setToken] = useState(null);\n  const [customer, setCustomer] = useState(null);\n  const [certificates, setCertificates] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [sessionReady, setSessionReady] = useState(false);\n  useEffect(() => {\n    const establishSession = async () => {\n      try {\n        const res = await fetch(getApiUrl(framework, \"session\"), {\n          credentials: \"include\"\n        });\n        if (!res.ok) throw new Error(\"Failed to fetch session\");\n        const data = await res.json();\n        document.cookie = `eiq_session_token=${data.token}; path=/; max-age=3600; SameSite=Lax`;\n        setSessionReady(true);\n      } catch (err) {\n        console.error(\"\\u274C Failed to set session cookie\", err);\n        setError(\"Session initialization failed\");\n        setLoading(false);\n      }\n    };\n    establishSession();\n  }, []);\n  useEffect(() => {\n    if (!sessionReady) return;\n    const init = async () => {\n      try {\n        setLoading(true);\n        const tokenRes = await fetch(getApiUrl(framework, \"gencert/token\"), {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({ customerCode, ...customerInfo })\n        });\n        const tokenData = await tokenRes.json();\n        setToken(tokenData.token);\n        setCustomer(tokenData.customer);\n        const certRes = await fetch(getApiUrl(framework, \"certificates\"), {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({ customerCode })\n        });\n        const certData = await certRes.json();\n        setCertificates(certData);\n      } catch (err) {\n        console.error(\"\\u274C Client component init error:\", err);\n        setError(err.message || \"Something went wrong\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    init();\n  }, [sessionReady, customerCode]);\n  if (error) {\n    return /* @__PURE__ */ React.createElement(\"div\", { className: \"mt-4 text-red-500\" }, /* @__PURE__ */ React.createElement(\"p\", null, error));\n  }\n  if (loading || !token || !customer) {\n    return /* @__PURE__ */ React.createElement(\"div\", { className: \"text-gray-500 italic mt-4\" }, \"Loading exemption data...\");\n  }\n  return /* @__PURE__ */ React.createElement(\n    ExemptionIqCertificateTable,\n    {\n      token,\n      certificates,\n      customer,\n      customerInfo,\n      state,\n      showDownload,\n      manualValidation,\n      enableGenCertModal,\n      buttonText,\n      buttonTextColor,\n      primaryColor,\n      dangerColor,\n      successColor,\n      buttonStyles,\n      onComplete,\n      framework\n    }\n  );\n}\nexport {\n  ExemptionIqCustomerClient\n};\n", "\"use client\";\nimport { useEffect, useState } from \"react\";\nimport PDFModal from \"./ui/PDFModal\";\nimport ExemptionIqGenCertModal from \"./ExemptionIqGencertModal\";\nimport ExemptionIqAddCertificateButton from \"./ExemptionIqAddCertificateButton\";\nimport React from \"react\";\nimport { getApiUrl } from \"../server/helpers/getApiUrl\";\nconst styles = {\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"1.5rem\"\n  },\n  tableHeader: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: \"1rem\"\n  },\n  heading: {\n    fontSize: \"1.25rem\",\n    fontWeight: 600,\n    color: \"#1f2937\"\n  },\n  tableContainer: {\n    overflowX: \"auto\"\n  },\n  table: {\n    width: \"100%\",\n    borderCollapse: \"collapse\",\n    backgroundColor: \"#ffffff\"\n  },\n  th: {\n    padding: \"0.75rem 1.5rem\",\n    textAlign: \"left\",\n    fontSize: \"0.75rem\",\n    fontWeight: 600,\n    textTransform: \"uppercase\",\n    color: \"#6b7280\",\n    letterSpacing: \"0.05em\",\n    borderBottom: \"1px solid #e5e7eb\",\n    backgroundColor: \"#f9fafb\"\n  },\n  td: {\n    padding: \"1rem 1.5rem\",\n    whiteSpace: \"nowrap\",\n    borderBottom: \"1px solid #e5e7eb\",\n    fontSize: \"0.875rem\",\n    color: \"#1f2937\"\n  },\n  actionRow: {\n    display: \"flex\",\n    gap: \"1.5rem\"\n  },\n  actionButton: {\n    background: \"none\",\n    border: \"none\",\n    cursor: \"pointer\",\n    font: \"inherit\",\n    transition: \"opacity 0.2s ease\"\n  },\n  emptyCell: {\n    textAlign: \"center\",\n    color: \"#6b7280\",\n    padding: \"1rem\"\n  }\n};\nfunction ExemptionIqCertificateTable({\n  token,\n  sessionToken,\n  certificates: initialCertificates,\n  customer,\n  state,\n  showDownload = false,\n  manualValidation = true,\n  buttonText = \"Add New Certificate\",\n  buttonTextColor,\n  primaryColor = \"#2966B1\",\n  successColor = \"#14AE5C\",\n  dangerColor = \"#E76F51\",\n  buttonStyles,\n  onComplete,\n  framework = \"next\"\n}) {\n  const [certificates, setCertificates] = useState(initialCertificates);\n  const [previewUrl, setPreviewUrl] = useState(null);\n  const [showRenewModal, setShowRenewModal] = useState(false);\n  const [isRenewing, setIsRenewing] = useState(false);\n  const [selectedCert, setSelectedCert] = useState(null);\n  useEffect(() => {\n    if (sessionToken) {\n      document.cookie = `eiq_session_token=${sessionToken.token}; path=/; max-age=3600; SameSite=Lax`;\n    }\n  }, []);\n  const handleCertificateComplete = async () => {\n    try {\n      const response = await fetch(getApiUrl(framework, \"certificates\"), {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ customerCode: customer.customerCode })\n      });\n      if (!response.ok) throw new Error(\"Failed to fetch updated certificates\");\n      const updated = await response.json();\n      setCertificates(updated);\n      setIsRenewing(false);\n      setShowRenewModal(false);\n      setSelectedCert(null);\n    } catch (err) {\n      console.error(\"Error refreshing certificates:\", err);\n    } finally {\n      window.location.reload();\n    }\n  };\n  const isExpiringSoon = (expirationDate) => {\n    const today = /* @__PURE__ */ new Date();\n    const expiry = new Date(expirationDate);\n    const days = (expiry.getTime() - today.getTime()) / (1e3 * 60 * 60 * 24);\n    return days <= 30 && days >= 0;\n  };\n  return /* @__PURE__ */ React.createElement(\"div\", { style: styles.container }, previewUrl && /* @__PURE__ */ React.createElement(\n    PDFModal,\n    {\n      isOpen: !!previewUrl,\n      onClose: () => setPreviewUrl(null),\n      pdfUrl: previewUrl,\n      title: \"Certificate PDF Preview\"\n    }\n  ), /* @__PURE__ */ React.createElement(\"div\", { style: styles.tableHeader }, /* @__PURE__ */ React.createElement(\"h2\", { style: styles.heading }, customer.name, \" Exemption Certificates\"), /* @__PURE__ */ React.createElement(\n    ExemptionIqAddCertificateButton,\n    {\n      token,\n      state,\n      customerCode: customer.customerCode,\n      customerInfo: {\n        name: customer.name,\n        emailAddress: customer.emailAddress,\n        addressLine1: customer.line1,\n        addressLine2: customer.line2,\n        city: customer.city,\n        postalCode: customer.postalCode,\n        phoneNumber: customer.phoneNumber,\n        faxNumber: customer.faxNumber,\n        country: customer.country,\n        region: customer.region\n      },\n      certificateComplete: handleCertificateComplete,\n      showDownload,\n      manualValidation,\n      buttonText,\n      buttonTextColor,\n      primaryColor,\n      buttonStyles,\n      onComplete\n    }\n  )), /* @__PURE__ */ React.createElement(\"div\", { style: styles.tableContainer }, /* @__PURE__ */ React.createElement(\"table\", { style: styles.table }, /* @__PURE__ */ React.createElement(\"thead\", null, /* @__PURE__ */ React.createElement(\"tr\", null, [\n    \"Status\",\n    \"Exposure Zone\",\n    \"Reason\",\n    \"Signed Date\",\n    \"Expiration Date\",\n    \"Actions\"\n  ].map((h) => /* @__PURE__ */ React.createElement(\"th\", { key: h, style: styles.th }, h)))), /* @__PURE__ */ React.createElement(\"tbody\", null, certificates.map((cert) => /* @__PURE__ */ React.createElement(\"tr\", { key: cert.id }, /* @__PURE__ */ React.createElement(\"td\", { style: styles.td }, /* @__PURE__ */ React.createElement(\n    \"span\",\n    {\n      style: {\n        textTransform: \"capitalize\",\n        fontWeight: 500,\n        color: cert.status === \"valid\" ? \"#16a34a\" : cert.status === \"expired\" ? \"#dc2626\" : cert.status === \"invalid\" ? \"#ea580c\" : \"#4b5563\"\n      }\n    },\n    cert.status\n  )), /* @__PURE__ */ React.createElement(\"td\", { style: styles.td }, cert.exposureZone), /* @__PURE__ */ React.createElement(\"td\", { style: styles.td }, cert.exemptionReason), /* @__PURE__ */ React.createElement(\"td\", { style: styles.td }, cert.signedDate), /* @__PURE__ */ React.createElement(\n    \"td\",\n    {\n      style: {\n        ...styles.td,\n        color: isExpiringSoon(cert.expirationDate) ? dangerColor : void 0,\n        fontWeight: isExpiringSoon(cert.expirationDate) ? 600 : void 0\n      }\n    },\n    cert.expirationDate\n  ), /* @__PURE__ */ React.createElement(\"td\", { style: styles.td }, /* @__PURE__ */ React.createElement(\"div\", { style: styles.actionRow }, /* @__PURE__ */ React.createElement(\n    \"button\",\n    {\n      onClick: () => setPreviewUrl(\n        getApiUrl(framework, `certificate/${cert.id}`)\n      ),\n      title: \"View Certificate\",\n      style: { ...styles.actionButton, color: primaryColor }\n    },\n    \"View\"\n  ), /* @__PURE__ */ React.createElement(\n    \"button\",\n    {\n      onClick: () => {\n        setSelectedCert(cert);\n        setIsRenewing(true);\n        setShowRenewModal(true);\n      },\n      title: \"Renew Certificate\",\n      style: { ...styles.actionButton, color: successColor }\n    },\n    \"Renew\"\n  ))))), certificates.length === 0 && /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", { colSpan: 6, style: styles.emptyCell }, 'No certificates found. Click \"Add New Certificate\" to create one.'))))), isRenewing && selectedCert && /* @__PURE__ */ React.createElement(\n    ExemptionIqGenCertModal,\n    {\n      isOpen: showRenewModal,\n      onClose: () => {\n        setShowRenewModal(false);\n        setIsRenewing(false);\n        setSelectedCert(null);\n      },\n      token,\n      state: selectedCert.exposureZone,\n      customerCode: customer.customerCode,\n      customerInfo: {\n        name: customer.name,\n        emailAddress: customer.emailAddress,\n        addressLine1: customer.line1,\n        addressLine2: customer.line2,\n        city: customer.city,\n        postalCode: customer.postalCode,\n        phoneNumber: customer.phoneNumber,\n        faxNumber: customer.faxNumber,\n        country: customer.country,\n        region: customer.region\n      },\n      disableCustomerFields: true,\n      showDownload,\n      manualValidation,\n      onCertificateComplete: handleCertificateComplete,\n      mode: \"renew\"\n    }\n  ));\n}\nexport {\n  ExemptionIqCertificateTable as default\n};\n", "\"use client\";\nimport AvataxCertificateClient from \"./AvataxCertificateClient\";\nimport Modal from \"./ui/Modal\";\nimport React from \"react\";\nfunction ExemptionIqGenCertModal({\n  isOpen,\n  onClose,\n  token,\n  state,\n  customerCode,\n  customerInfo,\n  disableCustomerFields = false,\n  showDownload = false,\n  manualValidation = true,\n  onCertificateComplete,\n  mode,\n  onComplete\n}) {\n  return /* @__PURE__ */ React.createElement(Modal, { isOpen, onClose }, /* @__PURE__ */ React.createElement(\n    AvataxCertificateClient,\n    {\n      token,\n      state,\n      showDownload,\n      manualValidation,\n      onCertificateComplete: onCertificateComplete || (() => {\n      }),\n      onClose,\n      customerCode,\n      customerInfo,\n      shouldPrefillState: disableCustomerFields,\n      mode: \"renew\",\n      onComplete\n    }\n  ));\n}\nexport {\n  ExemptionIqGenCertModal as default\n};\n", "\"use client\";\nimport { useState } from \"react\";\nimport AvataxCertificateClient from \"./AvataxCertificateClient\";\nimport Modal from \"./ui/Modal\";\nimport React from \"react\";\nconst CERTCAPTURE_ZONES = [\n  \"Alabama\",\n  \"Alaska\",\n  \"American Samoa\",\n  \"Arizona\",\n  \"Arkansas\",\n  \"California\",\n  \"Colorado\",\n  \"Connecticut\",\n  \"District of Columbia\",\n  \"Florida\",\n  \"Georgia\",\n  \"Guam\",\n  \"Hawaii\",\n  \"Idaho\",\n  \"Illinois\",\n  \"Indiana\",\n  \"Iowa\",\n  \"Kansas\",\n  \"Kentucky\",\n  \"Louisiana\",\n  \"Maine\",\n  \"Maryland\",\n  \"Massachusetts\",\n  \"Michigan\",\n  \"Minnesota\",\n  \"Mississippi\",\n  \"Missouri\",\n  \"Nebraska\",\n  \"Nevada\",\n  \"New Jersey\",\n  \"New Mexico\",\n  \"New York\",\n  \"North Carolina\",\n  \"North Dakota\",\n  \"Northern Mariana Islands\",\n  \"Ohio\",\n  \"Oklahoma\",\n  \"Pennsylvania\",\n  \"Puerto Rico\",\n  \"Rhode Island\",\n  \"South Carolina\",\n  \"South Dakota\",\n  \"Tennessee\",\n  \"Texas\",\n  \"Utah\",\n  \"Vermont\",\n  \"Virginia\",\n  \"Washington\",\n  \"West Virginia\",\n  \"Wisconsin\",\n  \"Wyoming\",\n  \"Armed Forces Americas\",\n  \"Armed Forces Europe\",\n  \"Armed Forces Pacific\"\n];\nconst styles = {\n  button: {\n    padding: \"0.75rem 1.5rem\",\n    borderRadius: \"6px\",\n    fontWeight: 500,\n    transition: \"all 150ms ease-in-out\",\n    border: \"none\",\n    display: \"inline-block\"\n  },\n  modalContent: {\n    padding: \"1rem\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"1rem\"\n  },\n  select: {\n    width: \"100%\",\n    padding: \"0.5rem\",\n    border: \"1px solid #d1d5db\",\n    borderRadius: \"0.375rem\",\n    fontSize: \"1rem\"\n  },\n  modalActions: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    gap: \"0.75rem\"\n  },\n  cancelBtn: {\n    padding: \"0.5rem 1rem\",\n    backgroundColor: \"#f3f4f6\",\n    color: \"#374151\",\n    border: \"none\",\n    borderRadius: \"0.375rem\",\n    cursor: \"pointer\"\n  },\n  cancelBtnHover: {\n    backgroundColor: \"#e5e7eb\"\n  },\n  continueBtn: {\n    padding: \"0.5rem 1rem\",\n    backgroundColor: \"#2563eb\",\n    color: \"white\",\n    border: \"none\",\n    borderRadius: \"0.375rem\",\n    cursor: \"pointer\"\n  },\n  continueBtnDisabled: {\n    opacity: 0.5,\n    cursor: \"not-allowed\"\n  }\n};\nfunction ExemptionIqAddCertificateButton({\n  token,\n  state,\n  customerCode,\n  customerInfo,\n  buttonText = \"Add Certificate\",\n  buttonTextColor = \"#FFFFFF\",\n  primaryColor = \"#2966B1\",\n  buttonStyles,\n  showDownload = false,\n  manualValidation = true,\n  certificateComplete,\n  onComplete\n}) {\n  const [showStateSelector, setShowStateSelector] = useState(false);\n  const [showGenCertModal, setShowGenCertModal] = useState(false);\n  const [selectedState, setSelectedState] = useState(null);\n  const handleButtonClick = () => {\n    if (token && customerCode) setShowStateSelector(true);\n  };\n  const handleStateSubmit = () => {\n    if (selectedState) {\n      setShowStateSelector(false);\n      setShowGenCertModal(true);\n    }\n  };\n  const handleCertificateComplete = () => {\n    setShowGenCertModal(false);\n    setSelectedState(null);\n    certificateComplete();\n  };\n  const handleCloseAll = () => {\n    setShowGenCertModal(false);\n    setShowStateSelector(false);\n    setSelectedState(null);\n  };\n  const computedButtonStyle = {\n    ...styles.button,\n    backgroundColor: primaryColor,\n    color: buttonTextColor,\n    cursor: !token || !customerCode ? \"not-allowed\" : \"pointer\",\n    opacity: !token || !customerCode ? 0.6 : 1,\n    ...buttonStyles ? JSON.parse(buttonStyles) : {}\n  };\n  return /* @__PURE__ */ React.createElement(\"div\", null, /* @__PURE__ */ React.createElement(\n    \"button\",\n    {\n      onClick: handleButtonClick,\n      disabled: !token || !customerCode,\n      style: computedButtonStyle\n    },\n    buttonText\n  ), showStateSelector && /* @__PURE__ */ React.createElement(Modal, { isOpen: showStateSelector, onClose: handleCloseAll }, /* @__PURE__ */ React.createElement(\"div\", { style: styles.modalContent }, /* @__PURE__ */ React.createElement(\"h2\", { style: { fontSize: \"1.125rem\", fontWeight: 600 } }, \"Select State for Certificate\"), /* @__PURE__ */ React.createElement(\n    \"select\",\n    {\n      style: styles.select,\n      value: selectedState || \"\",\n      onChange: (e) => setSelectedState(e.target.value)\n    },\n    /* @__PURE__ */ React.createElement(\"option\", { value: \"\", disabled: true }, \"-- Choose a state --\"),\n    CERTCAPTURE_ZONES.map((s) => /* @__PURE__ */ React.createElement(\"option\", { key: s, value: s }, s))\n  ), /* @__PURE__ */ React.createElement(\"div\", { style: styles.modalActions }, /* @__PURE__ */ React.createElement(\"button\", { onClick: handleCloseAll, style: styles.cancelBtn }, \"Cancel\"), /* @__PURE__ */ React.createElement(\n    \"button\",\n    {\n      onClick: handleStateSubmit,\n      disabled: !selectedState,\n      style: {\n        ...styles.continueBtn,\n        ...selectedState ? {} : styles.continueBtnDisabled\n      }\n    },\n    \"Continue\"\n  )))), showGenCertModal && selectedState && /* @__PURE__ */ React.createElement(Modal, { isOpen: showGenCertModal, onClose: handleCloseAll }, /* @__PURE__ */ React.createElement(\n    AvataxCertificateClient,\n    {\n      token,\n      state: selectedState,\n      customerCode,\n      customerInfo,\n      showDownload,\n      manualValidation,\n      shouldPrefillState: false,\n      onCertificateComplete: handleCertificateComplete,\n      onClose: handleCloseAll,\n      mode: \"add\",\n      onComplete\n    }\n  )));\n}\nexport {\n  ExemptionIqAddCertificateButton as default\n};\n", "\"use client\";\nimport { useEffect, useState } from \"react\";\nimport AvataxCertificateClient from \"./AvataxCertificateClient\";\nimport Modal from \"./ui/Modal\";\nimport PDFModal from \"./ui/PDFModal\";\nimport React from \"react\";\nimport { getApiUrl } from \"../server/helpers/getApiUrl\";\nconst styles = {\n  button: {\n    padding: \"0.75rem 1.5rem\",\n    borderRadius: \"6px\",\n    fontWeight: 500,\n    transition: \"all 150ms ease-in-out\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"none\"\n  },\n  spinner: {\n    animation: \"spin 1s linear infinite\",\n    marginRight: \"0.75rem\",\n    height: \"1.25rem\",\n    width: \"1.25rem\"\n  },\n  certModal: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"1rem\"\n  },\n  certBox: {\n    backgroundColor: \"#f9fafb\",\n    padding: \"1rem\",\n    borderRadius: \"0.5rem\",\n    border: \"1px solid #d1d5db\"\n  },\n  certActions: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    gap: \"1rem\",\n    paddingTop: \"1rem\"\n  },\n  viewPdf: {\n    color: \"#2563eb\",\n    textDecoration: \"underline\",\n    background: \"none\",\n    border: \"none\",\n    cursor: \"pointer\",\n    font: \"inherit\"\n  },\n  useCertBtn: {\n    backgroundColor: \"#e5e7eb\",\n    fontSize: \"0.875rem\",\n    padding: \"0.5rem 1rem\",\n    borderRadius: \"4px\",\n    border: \"none\",\n    cursor: \"pointer\"\n  },\n  uploadCertBtn: {\n    color: \"white\",\n    fontSize: \"0.875rem\",\n    padding: \"0.5rem 1rem\",\n    borderRadius: \"4px\",\n    border: \"none\",\n    cursor: \"pointer\"\n  },\n  successBtn: {\n    backgroundColor: \"#14AE5C\",\n    color: \"#fff\",\n    padding: \"0.5rem 1rem\",\n    borderRadius: \"4px\",\n    opacity: 0.75,\n    cursor: \"not-allowed\",\n    border: \"none\"\n  }\n};\nif (typeof window !== \"undefined\" && !document.getElementById(\"eiq-btn-keyframes\")) {\n  const style = document.createElement(\"style\");\n  style.id = \"eiq-btn-keyframes\";\n  style.innerHTML = `@keyframes spin { to { transform: rotate(360deg); } }`;\n  document.head.appendChild(style);\n}\nfunction ExemptionIqButton({\n  token,\n  sessionToken,\n  isAuthorized,\n  state,\n  showDownload = false,\n  manualValidation = false,\n  buttonText = \"Tax Exempt\",\n  buttonTextColor,\n  primaryColor = \"#2966B1\",\n  dangerColor = \"#E76F51\",\n  successColor = \"#14AE5C\",\n  buttonStyles,\n  customerCode,\n  customerInfo,\n  onComplete,\n  persistAfterSuccess = false,\n  matchingCertificate,\n  framework = \"next\"\n}) {\n  const [showGenCert, setShowGenCert] = useState(false);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showCertForm, setShowCertForm] = useState(false);\n  const [certificateId, setCertificateId] = useState(null);\n  const [showSuccessState, setShowSuccessState] = useState(false);\n  const [certSubmitted, setCertSubmitted] = useState(false);\n  const [showCertChoiceModal, setShowCertChoiceModal] = useState(false);\n  const [previewUrl, setPreviewUrl] = useState(null);\n  useEffect(() => {\n    if (sessionToken) {\n      const expires = new Date(Date.now() + 60 * 60 * 1e3).toUTCString();\n      document.cookie = `eiq_session_token=${sessionToken.token}; path=/; expires=${expires}; secure; samesite=Lax`;\n    }\n  }, [sessionToken]);\n  const getButtonColor = () => {\n    if (!customerCode) return dangerColor;\n    if (!isAuthorized || !token || error) return dangerColor;\n    if (showSuccessState) return successColor;\n    return primaryColor;\n  };\n  const getButtonText = () => {\n    if (!customerCode) return \"No Customer Code\";\n    if (!isAuthorized || !token) return \"Unauthorized\";\n    if (isLoading) return \"Processing...\";\n    if (showSuccessState) return \"Exempt \\u2713\";\n    return buttonText;\n  };\n  const handleClick = () => {\n    if (!customerCode || !isAuthorized || !token) return;\n    if (matchingCertificate) setShowCertChoiceModal(true);\n    else {\n      setShowGenCert(true);\n      setShowCertForm(true);\n    }\n  };\n  const handleCertificateComplete = (certId) => {\n    setCertificateId(certId);\n    setCertSubmitted(true);\n    setIsLoading(false);\n  };\n  const handleClose = () => {\n    setShowCertForm(false);\n    setIsLoading(false);\n    if (certSubmitted && !persistAfterSuccess) setShowSuccessState(true);\n    setCertSubmitted(false);\n  };\n  const parsedButtonStyles = buttonStyles ? JSON.parse(buttonStyles) : {};\n  const dynamicButtonStyle = {\n    ...styles.button,\n    backgroundColor: getButtonColor(),\n    color: buttonTextColor || \"#fff\",\n    cursor: !customerCode || !isAuthorized || !token || isLoading ? \"not-allowed\" : \"pointer\",\n    opacity: !customerCode || !isAuthorized || !token || isLoading ? 0.7 : 1,\n    ...parsedButtonStyles\n  };\n  if (showSuccessState && !persistAfterSuccess) {\n    return /* @__PURE__ */ React.createElement(\"div\", { style: { width: \"100%\" } }, /* @__PURE__ */ React.createElement(\n      \"button\",\n      {\n        disabled: true,\n        style: {\n          ...styles.successBtn,\n          ...parsedButtonStyles\n        }\n      },\n      \"Exempt \\u2713\"\n    ));\n  }\n  return /* @__PURE__ */ React.createElement(\"div\", null, !showCertForm && /* @__PURE__ */ React.createElement(\n    \"button\",\n    {\n      onClick: handleClick,\n      disabled: !customerCode || !isAuthorized || !token || isLoading,\n      style: dynamicButtonStyle\n    },\n    /* @__PURE__ */ React.createElement(\"span\", { style: { display: \"inline-flex\", alignItems: \"center\" } }, isLoading && /* @__PURE__ */ React.createElement(\n      \"svg\",\n      {\n        style: styles.spinner,\n        xmlns: \"http://www.w3.org/2000/svg\",\n        fill: \"none\",\n        viewBox: \"0 0 24 24\"\n      },\n      /* @__PURE__ */ React.createElement(\n        \"circle\",\n        {\n          cx: \"12\",\n          cy: \"12\",\n          r: \"10\",\n          stroke: \"currentColor\",\n          strokeWidth: \"4\"\n        }\n      ),\n      /* @__PURE__ */ React.createElement(\n        \"path\",\n        {\n          fill: \"currentColor\",\n          d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291...\"\n        }\n      )\n    ), getButtonText())\n  ), showCertChoiceModal && matchingCertificate && /* @__PURE__ */ React.createElement(Modal, { isOpen: true, onClose: () => setShowCertChoiceModal(false) }, /* @__PURE__ */ React.createElement(\"div\", { style: styles.certModal }, /* @__PURE__ */ React.createElement(\"h2\", { style: { fontSize: \"1rem\", color: \"#374151\" } }, \"A valid certificate already exists for \", state), /* @__PURE__ */ React.createElement(\"p\", { style: { fontSize: \"0.875rem\", color: \"#6b7280\" } }, \"You can use this certificate or upload a new one.\"), /* @__PURE__ */ React.createElement(\"div\", { style: styles.certBox }, /* @__PURE__ */ React.createElement(\"p\", null, /* @__PURE__ */ React.createElement(\"strong\", null, \"Reason:\"), \" \", matchingCertificate.actualTaxCode.name), /* @__PURE__ */ React.createElement(\"p\", null, /* @__PURE__ */ React.createElement(\"strong\", null, \"Signed:\"), \" \", new Date(\n    matchingCertificate.certificate.signedDate\n  ).toLocaleDateString()), /* @__PURE__ */ React.createElement(\"p\", null, /* @__PURE__ */ React.createElement(\"strong\", null, \"Expires:\"), \" \", matchingCertificate.certificate.expirationDate ? new Date(\n    matchingCertificate.certificate.expirationDate\n  ).toLocaleDateString() : \"N/A\"), /* @__PURE__ */ React.createElement(\n    \"button\",\n    {\n      style: styles.viewPdf,\n      onClick: () => setPreviewUrl(\n        getApiUrl(\n          framework,\n          `certificate/${matchingCertificate.id}`\n        )\n      )\n    },\n    \"View PDF\"\n  )), /* @__PURE__ */ React.createElement(\"div\", { style: styles.certActions }, /* @__PURE__ */ React.createElement(\n    \"button\",\n    {\n      style: styles.useCertBtn,\n      onClick: () => {\n        setShowCertChoiceModal(false);\n        setShowSuccessState(true);\n        onComplete == null ? void 0 : onComplete(true);\n      }\n    },\n    \"Use This Certificate\"\n  ), /* @__PURE__ */ React.createElement(\n    \"button\",\n    {\n      style: {\n        ...styles.uploadCertBtn,\n        backgroundColor: primaryColor\n      },\n      onClick: () => {\n        setShowCertChoiceModal(false);\n        setShowCertForm(true);\n      }\n    },\n    \"Upload New Certificate\"\n  )))), previewUrl && /* @__PURE__ */ React.createElement(\n    PDFModal,\n    {\n      isOpen: !!previewUrl,\n      onClose: () => setPreviewUrl(null),\n      pdfUrl: previewUrl,\n      title: \"Certificate PDF Preview\"\n    }\n  ), showCertForm && token && /* @__PURE__ */ React.createElement(Modal, { isOpen: showCertForm, onClose: handleClose }, /* @__PURE__ */ React.createElement(\n    AvataxCertificateClient,\n    {\n      token,\n      state,\n      showDownload,\n      manualValidation,\n      onCertificateComplete: handleCertificateComplete,\n      onClose: handleClose,\n      customerCode,\n      customerInfo,\n      mode: \"renew\",\n      onComplete\n    }\n  )), error && /* @__PURE__ */ React.createElement(\"div\", { style: { marginTop: \"1rem\", color: \"#ef4444\" } }, /* @__PURE__ */ React.createElement(\"p\", null, error)));\n}\nexport {\n  ExemptionIqButton as default\n};\n", "import { getAvalaraCredentials } from \"../server/helpers/getAvalaraCredentials\";\nimport { getSessionToken } from \"../server/helpers/getSessionToken\";\nimport ExemptionIqButton from \"./ExemptionIqButton\";\nimport React from \"react\";\nconst baseUrl = typeof process !== \"undefined\" ? process.env.AVATAX_API_BASE : \"https://sandbox-rest.avatax.com/api/v2\";\nconst styles = {\n  container: {\n    position: \"relative\"\n  },\n  error: {\n    marginTop: \"1rem\",\n    color: \"#ef4444\",\n    fontSize: \"0.875rem\"\n  }\n};\nasync function getCustomerByCode(customerCode, credentials) {\n  const basicAuth = Buffer.from(\n    `${credentials.username}:${credentials.password}`\n  ).toString(\"base64\");\n  const response = await fetch(\n    `${baseUrl}/companies/${credentials.companyId}/customers/${customerCode}`,\n    {\n      headers: {\n        \"X-Avalara-Client\": credentials.clientId,\n        Authorization: `Basic ${basicAuth}`\n      }\n    }\n  );\n  if (!response.ok) {\n    if (response.status === 404) return null;\n    throw new Error(`Failed to get customer: ${await response.text()}`);\n  }\n  return await response.json();\n}\nasync function createCustomer(customerCode, customerInfo, credentials, state) {\n  const basicAuth = Buffer.from(\n    `${credentials.username}:${credentials.password}`\n  ).toString(\"base64\");\n  const payload = {\n    companyId: credentials.companyId,\n    customerCode,\n    name: customerInfo == null ? void 0 : customerInfo.name,\n    emailAddress: customerInfo == null ? void 0 : customerInfo.emailAddress,\n    line1: (customerInfo == null ? void 0 : customerInfo.addressLine1) || \"\",\n    line2: (customerInfo == null ? void 0 : customerInfo.addressLine2) || \"\",\n    city: (customerInfo == null ? void 0 : customerInfo.city) || \"\",\n    postalCode: (customerInfo == null ? void 0 : customerInfo.postalCode) || \"\",\n    phoneNumber: (customerInfo == null ? void 0 : customerInfo.phoneNumber) || \"\",\n    faxNumber: (customerInfo == null ? void 0 : customerInfo.faxNumber) || \"\",\n    country: (customerInfo == null ? void 0 : customerInfo.country) || \"US\",\n    region: (customerInfo == null ? void 0 : customerInfo.region) || state || \"\"\n  };\n  const response = await fetch(\n    `${baseUrl}/companies/${credentials.companyId}/customers`,\n    {\n      method: \"POST\",\n      headers: {\n        \"X-Avalara-Client\": credentials.clientId,\n        Authorization: `Basic ${basicAuth}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(payload)\n    }\n  );\n  if (!response.ok) {\n    throw new Error(`Failed to create customer: ${await response.text()}`);\n  }\n  return await response.json();\n}\nasync function generateToken(customerCode, customerInfo, credentials) {\n  const basicAuth = Buffer.from(\n    `${credentials.username}:${credentials.password}`\n  ).toString(\"base64\");\n  const payload = {\n    customerNumber: customerCode,\n    ...customerInfo\n  };\n  const response = await fetch(\n    `${baseUrl}/companies/${credentials.companyId}/ecommercetokens`,\n    {\n      method: \"POST\",\n      headers: {\n        \"X-Avalara-Client\": credentials.clientId,\n        Authorization: `Basic ${basicAuth}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(payload)\n    }\n  );\n  if (!response.ok) {\n    throw new Error(`Failed to generate token: ${await response.text()}`);\n  }\n  const data = await response.json();\n  return data.token;\n}\nasync function getMatchingCertificate(customerCode, state, credentials) {\n  const basicAuth = Buffer.from(\n    `${credentials.username}:${credentials.password}`\n  ).toString(\"base64\");\n  const res = await fetch(\n    `${baseUrl}/companies/${credentials.companyId}/customers/${customerCode}?$include=active_certificates`,\n    {\n      headers: {\n        \"X-Avalara-Client\": credentials.clientId,\n        Authorization: `Basic ${basicAuth}`\n      }\n    }\n  );\n  if (!res.ok) return null;\n  const data = await res.json();\n  const certs = (data == null ? void 0 : data.activeCertificates) || [];\n  return certs.find(\n    (c) => {\n      var _a, _b;\n      return ((_a = c.exposureZone) == null ? void 0 : _a.name.toLowerCase()) === state.toLowerCase() && ((_b = c.certificate) == null ? void 0 : _b.valid);\n    }\n  ) || null;\n}\nasync function ExemptionIqServer(props) {\n  let token = null;\n  let isAuthorized = false;\n  let error = null;\n  let customerData = null;\n  let matchingCert = null;\n  const sessionToken = await getSessionToken();\n  try {\n    const credentials = await getAvalaraCredentials(sessionToken);\n    customerData = await getCustomerByCode(props.customerCode, credentials);\n    if (!customerData) {\n      customerData = await createCustomer(\n        props.customerCode,\n        props.customerInfo,\n        credentials,\n        props == null ? void 0 : props.state\n      );\n    }\n    token = await generateToken(\n      customerData.customerCode,\n      {\n        name: customerData.name,\n        emailAddress: customerData.emailAddress,\n        addressLine1: customerData.line1,\n        addressLine2: customerData.line2,\n        city: customerData.city,\n        postalCode: customerData.postalCode,\n        phoneNumber: customerData.phoneNumber,\n        faxNumber: customerData.faxNumber,\n        country: customerData.country,\n        region: customerData.region\n      },\n      credentials\n    );\n    matchingCert = await getMatchingCertificate(\n      customerData.customerCode,\n      props.state,\n      credentials\n    );\n    isAuthorized = true;\n  } catch (err) {\n    console.error(\"ExemptionIqServer error:\", err);\n    error = err.message;\n    isAuthorized = false;\n  }\n  return /* @__PURE__ */ React.createElement(\"div\", { style: styles.container }, /* @__PURE__ */ React.createElement(\n    ExemptionIqButton,\n    {\n      token,\n      sessionToken,\n      isAuthorized,\n      ...props,\n      customerCode: props.customerCode,\n      customerInfo: props.customerInfo,\n      matchingCertificate: matchingCert\n    }\n  ), error && /* @__PURE__ */ React.createElement(\"div\", { style: styles.error }, /* @__PURE__ */ React.createElement(\"p\", null, error)));\n}\nexport {\n  ExemptionIqServer\n};\n", "import { getSessionToken } from \"../server/helpers/getSessionToken\";\nimport { getAvalaraCredentials } from \"../server/helpers/getAvalaraCredentials\";\nimport ExemptionIqCertificateTable from \"./ExemptionIqCertificateTable\";\nimport React from \"react\";\nasync function ExemptionIqCustomerServer({\n  customerCode,\n  customerInfo,\n  state,\n  showDownload = false,\n  manualValidation = true,\n  enableGenCertModal = false,\n  buttonText = \"Add New Certificate\",\n  buttonTextColor,\n  primaryColor = \"#2966B1\",\n  dangerColor = \"#E76F51\",\n  successColor = \"#14AE5C\",\n  buttonStyles,\n  onComplete,\n  avataxBaseUrl\n}) {\n  try {\n    const sessionToken = await getSessionToken();\n    const credentials = await getAvalaraCredentials(sessionToken);\n    const basicAuth = Buffer.from(\n      `${credentials.username}:${credentials.password}`\n    ).toString(\"base64\");\n    const baseUrl = typeof process !== \"undefined\" ? process.env.AVATAX_API_BASE : \"https://sandbox-rest.avatax.com/api/v2\";\n    const customerRes = await fetch(\n      `${baseUrl}/companies/${credentials.companyId}/customers/${customerCode}`,\n      {\n        headers: {\n          \"X-Avalara-Client\": credentials.clientId,\n          Authorization: `Basic ${basicAuth}`\n        }\n      }\n    );\n    let customer = customerRes.ok ? await customerRes.json() : null;\n    if (!customer) {\n      const createRes = await fetch(\n        `${baseUrl}/companies/${credentials.companyId}/customers`,\n        {\n          method: \"POST\",\n          headers: {\n            \"X-Avalara-Client\": credentials.clientId,\n            Authorization: `Basic ${basicAuth}`,\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            companyId: credentials.companyId,\n            customerCode,\n            name: (customerInfo == null ? void 0 : customerInfo.name) || \"\",\n            emailAddress: (customerInfo == null ? void 0 : customerInfo.emailAddress) || \"\",\n            line1: (customerInfo == null ? void 0 : customerInfo.addressLine1) || \"\",\n            line2: (customerInfo == null ? void 0 : customerInfo.addressLine2) || \"\",\n            city: (customerInfo == null ? void 0 : customerInfo.city) || \"\",\n            postalCode: (customerInfo == null ? void 0 : customerInfo.postalCode) || \"\",\n            phoneNumber: (customerInfo == null ? void 0 : customerInfo.phoneNumber) || \"\",\n            faxNumber: (customerInfo == null ? void 0 : customerInfo.faxNumber) || \"\",\n            country: (customerInfo == null ? void 0 : customerInfo.country) || \"US\",\n            region: (customerInfo == null ? void 0 : customerInfo.region) || \"\"\n          })\n        }\n      );\n      if (!createRes.ok) throw new Error(\"Failed to create customer\");\n      customer = await createRes.json();\n    }\n    const tokenRes = await fetch(\n      `${baseUrl}/companies/${credentials.companyId}/ecommercetokens`,\n      {\n        method: \"POST\",\n        headers: {\n          \"X-Avalara-Client\": credentials.clientId,\n          Authorization: `Basic ${basicAuth}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({ customerNumber: customer.customerCode })\n      }\n    );\n    if (!tokenRes.ok) throw new Error(\"Failed to generate token\");\n    const tokenData = await tokenRes.json();\n    const certRes = await fetch(\n      `${baseUrl}/companies/${credentials.companyId}/customers/${customerCode}?$include=active_certificates`,\n      {\n        headers: {\n          \"X-Avalara-Client\": credentials.clientId,\n          Authorization: `Basic ${basicAuth}`\n        }\n      }\n    );\n    const certJson = await certRes.json();\n    const certs = ((certJson == null ? void 0 : certJson.activeCertificates) || []).map((cert) => {\n      var _a, _b;\n      return {\n        id: String(cert.id),\n        signedDate: new Date(cert.certificate.signedDate).toLocaleDateString(),\n        expirationDate: cert.certificate.expirationDate ? new Date(cert.certificate.expirationDate).toLocaleDateString() : \"N/A\",\n        exposureZone: ((_a = cert.exposureZone) == null ? void 0 : _a.name) || \"Unknown\",\n        exemptionReason: (_b = cert == null ? void 0 : cert.actualTaxCode) == null ? void 0 : _b.name,\n        status: cert.certificate.valid ? \"valid\" : \"invalid\",\n        pdfUrl: `${baseUrl}/companies/${credentials.companyId}/certificates/${cert.id}/attachment`\n      };\n    });\n    return /* @__PURE__ */ React.createElement(\n      ExemptionIqCertificateTable,\n      {\n        token: tokenData.token,\n        sessionToken,\n        certificates: certs,\n        customer,\n        customerInfo,\n        state,\n        showDownload,\n        manualValidation,\n        enableGenCertModal,\n        buttonText,\n        buttonTextColor,\n        primaryColor,\n        dangerColor,\n        successColor,\n        buttonStyles,\n        onComplete\n      }\n    );\n  } catch (err) {\n    console.error(\"ExemptionIqCustomerServer error:\", err);\n    return /* @__PURE__ */ React.createElement(\"div\", { style: { marginTop: \"1rem\", color: \"#ef4444\" } }, /* @__PURE__ */ React.createElement(\"p\", null, err));\n  }\n}\nexport {\n  ExemptionIqCustomerServer\n};\n", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/ClientOnly.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/ClientOnly.tsx\");\n  import.meta.hot.lastModified = \"1746187379664.1348\";\n}\n// REMIX HMR END\n\nimport { useEffect, useState } from \"react\";\nexport function ClientOnly({\n  children\n}) {\n  _s();\n  const [mounted, setMounted] = useState(false);\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n  if (!mounted) return null;\n  return <>{children}</>;\n}\n_s(ClientOnly, \"LrrVfNW3d1raFE0BNzCTILYmIfo=\");\n_c = ClientOnly;\nvar _c;\n$RefreshReg$(_c, \"ClientOnly\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react", "import_react", "React", "import_react", "import_react", "styles", "React", "import_react", "styles", "React", "styles", "React", "import_react", "import_react", "import_react", "React", "import_react", "import_react", "styles", "React", "import_react", "styles", "React", "React", "import_react", "import_react", "import_react", "import_react", "import_react"]
}
